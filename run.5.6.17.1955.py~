execfile('/home/rumbaugh/pythonscripts/plot_DB_lightcurves.py')
import matplotlib
import pyfits as py
import time
try:
    ntrials
except NameError:
    ntrials=10000
buff=0
clqsize=16

crdb=np.loadtxt('/home/rumbaugh/var_database/Y3A1/databaseIDs.dat',dtype={'names':('DatabaseID','DBIDS','MQrownum','SP_rownum','sdr7id','thingid','SDSSNAME','CID','TILENAME'),'formats':('|S32','|S128','i8','i8','|S24','i8','|S64','i8','|S32')},skiprows=1)
crdb=crdb[crdb['SDSSNAME']!='-1']
 
hdubh=py.open('/home/rumbaugh/dr7_bh_Nov19_2013.fits')
bhdata=hdubh[1].data
hduc=py.open('/home/rumbaugh/dr7_control.fits')
cdata=hduc[1].data
bhz,bhname,bhL=bhdata['REDSHIFT'],bhdata['SDSS_NAME'],bhdata['LOGLBOL']
cz,cname,cL=cdata['REDSHIFT'],cdata['SDSS_NAME'],cdata['LOGLBOL']

redshifts=np.zeros(len(crdb))
for i in range(0,len(crdb)):
    g=np.where(crdb['SDSSNAME'][i]==bhname)[0][0]
    redshifts[i]=bhz[g]

yearlen=365.25
halfyear=yearlen/2

SDSSstart=51000
SDSSend=55000
DESstart=56500
DESend=DESstart+yearlen*3
firstspec=np.zeros(ntrials)
observed=np.zeros(ntrials,dtype='bool')
while np.count_nonzero(observed)!=ntrials:
    g0=np.where(observed==False)[0]
    firstspec[g0]=np.uniform(SDSSstart,54000,len(g0))
    observed[g0][firstspec[g0]-SDSSstart)%yearlen<halfyear]=True

secondspec=np.zeros(ntrials)
observed=np.zeros(ntrials,dtype='bool')
while np.count_nonzero(observed)!=ntrials:
    g0=np.where(observed==False)[0]
    secondspec[g0]=np.uniform(firstspec+1000,DESend-halfyear,len(g0))
    observed[g0][((secondspec[g0]<SDSSend)&((secondspec[g0]-SDSSstart)%yearlen<halfyear))|((secondspec[g0]>DESstart)&((secondspec[g0]-DESstart)%yearlen<halfyear))]=True

lowepoch=np.random.choice([0,1],ntrials,p=[0.34,0.66])
CLQdetected=np.zeros(ntrials,dtype='bool')    

randzs=np.random.choice(redshifts,ntrials)
baselines_rf=np.random.uniform(100,6000,ntrials)
baselines_obs=baselines_rf*(1+randzs)
anchor_epoch=np.random.uniform(SDSSstart,DESend,ntrials)
direction=np.random.choice(np.array([-1,1]),ntrials)
second_epoch=anchor_epoch+direction*baselines_obs
detected=np.ones(ntrials,dtype='bool')
detected[(second_epoch<SDSSstart)|(second_epoch>DESend)|((second_epoch>SDSSend)&(second_epoch<DESstart))|((anchor_epoch>SDSSend)&(anchor_epoch<DESstart))]=0
detected[((anchor_epoch>SDSSstart)&(anchor_epoch<SDSSend)&((anchor_epoch-SDSSstart)%yearlen>halfyear))]=0
detected[((second_epoch>SDSSstart)&(second_epoch<SDSSend)&((second_epoch-SDSSstart)%yearlen>halfyear))]=0
detected[((anchor_epoch>DESstart)&(anchor_epoch<DESend)&((anchor_epoch-DESstart)%yearlen>halfyear))]=0
detected[((second_epoch>DESstart)&(second_epoch<DESend)&((second_epoch-DESstart)%yearlen>halfyear))]=0
detfrac_rf,detfrac_obs=np.zeros(0),np.zeros(0)
detepoch_rf,detepoch_obs=np.zeros(0),np.zeros(0)
try:
    fracbinwid
except NameError:
    fracbinwid=100
for t in np.arange(100,6000,10):
    g=np.where(np.abs(baselines_rf-t)<fracbinwid)[0]
    if len(g)>0:
        detfrac_rf,detepoch_rf=np.append(detfrac_rf,np.count_nonzero(detected[g])*1./len(g)),np.append(detepoch_rf,t)
for t in np.arange(0,20000,10):
    g=np.where(np.abs(baselines_obs-t)<fracbinwid)[0]
    if len(g)>0:
        detfrac_obs,detepoch_obs=np.append(detfrac_obs,np.count_nonzero(detected[g])*1./len(g)),np.append(detepoch_obs,t)
outcr=np.zeros((len(detfrac_rf),),dtype={'names':('detfrac','detepoch'),'formats':('f8','f8')})
outcr['detfrac'],outcr['detepoch']=detfrac_rf,detepoch_rf
np.savetxt('/home/rumbaugh/DetFracRF.buff_0.4.10.17.dat',outcr,fmt='%f %f',header='DetectionFraction Epoch')

outcr=np.zeros((len(detfrac_obs),),dtype={'names':('detfrac','detepoch'),'formats':('f8','f8')})
outcr['detfrac'],outcr['detepoch']=detfrac_obs,detepoch_obs
np.savetxt('/home/rumbaugh/DetFracObs.buff_0.4.10.17.dat',outcr,fmt='%f %f',header='DetectionFraction Epoch')

execfile('/home/rumbaugh/pythonscripts/set_plt_params.py')
